<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>alguidelines.dev - Business Central Design Patterns â€“ Telemetry</title><link>https://alguidelines.dev/tags/telemetry/</link><description>Recent content in Telemetry on alguidelines.dev - Business Central Design Patterns</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://alguidelines.dev/tags/telemetry/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Custom Telemetry</title><link>https://alguidelines.dev/docs/bestpractices/customtelemetry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alguidelines.dev/docs/bestpractices/customtelemetry/</guid><description>
&lt;p>&lt;em>Created by Microsoft, Described by Arend-Jan Kauffmann&lt;/em>&lt;/p>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>With AL it is possible to emit custom telemetry signals to Azure Application Insights. There are a number of considerations that you should keep in mind when designing custom telemetry signals.&lt;/p>
&lt;ul>
&lt;li>Think about it as an API&lt;/li>
&lt;li>Naming conventions and telemetry schema&lt;/li>
&lt;li>Objects emitting telemetry signals&lt;/li>
&lt;li>Candidate data for telemetry&lt;/li>
&lt;li>How customers use telemetry&lt;/li>
&lt;li>Privacy&lt;/li>
&lt;/ul>
&lt;h2 id="think-about-it-as-an-api">Think about it as an API&lt;/h2>
&lt;p>Customers will build analytics and monitoring solutions on top of their telemetry data.&lt;/p>
&lt;p>Therefore, signal must be treated as any other API&lt;/p>
&lt;ul>
&lt;li>documented&lt;/li>
&lt;li>versioned&lt;/li>
&lt;li>discoverable&lt;/li>
&lt;li>non-breaking&lt;/li>
&lt;/ul>
&lt;h2 id="naming-conventions-and-telemetry-schema">Naming conventions and telemetry schema&lt;/h2>
&lt;p>To make it easy for the consumer of telemetry to work with the data, please&lt;/p>
&lt;ul>
&lt;li>use &lt;strong>PascalCasing&lt;/strong>. This makes all fields in Application Insights look the same (signal logged through the AL LogMessage method will have &amp;ldquo;al&amp;rdquo; prefixed to dimension names.&lt;/li>
&lt;li>&lt;strong>Do not use special characters or spaces&lt;/strong> for fields/custom dimension keys. This makes the KQL queries so much easier to write&lt;/li>
&lt;li>for custom dimensions, consider using prefixes that helps the telemetry consumer understand where the dimension is coming from (e.g. HttpStatusCode, SqlStatement, &amp;hellip;)&lt;/li>
&lt;/ul>
&lt;p>Consider always having a &lt;strong>&amp;ldquo;message&amp;rdquo;&lt;/strong> field that expresses in human readable form what the telemetry event is about.
If you do, let message names follow the Object ActionInPastTense pattern
Some examples&lt;/p>
&lt;ul>
&lt;li>Web Service Called:&lt;/li>
&lt;li>Email attempt failed&lt;/li>
&lt;li>Authorization to environment succeeded&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-al" data-lang="al">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">local&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">procedure&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>ProcessHttpResponse&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">var&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Request&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">HttpRequestMessage&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">var&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Response&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">HttpResponseMessage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">var&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>CustomTelemetryDimensions&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Dictionary&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">of&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>[&lt;span style="color:#204a87;font-weight:bold">Text&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#204a87;font-weight:bold">Text&lt;/span>]&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">begin&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">if&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Response&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>HttpStatusCode&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&amp;lt;&amp;gt;&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">then&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">begin&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>CustomTelemetryDimensions&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#204a87;font-weight:bold">Add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;Url&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Request&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>GetRequestUri&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>CustomTelemetryDimensions&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#204a87;font-weight:bold">Add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;HttpStatusCode&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Format&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>Response&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>HttpStatusCode&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>CustomTelemetryDimensions&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#204a87;font-weight:bold">Add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;ReasonPhrase&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Response&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>ReasonPhrase&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Session&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>LogMessage&lt;span style="color:#ce5c00;font-weight:bold">(
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;MyExt0001&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;Web service call failed&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Verbosity&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>Error&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">DataClassification&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>SystemMetadata&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>TelemetryScope&lt;span style="color:#000;font-weight:bold">::&lt;/span>ExtensionPublisher&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>CustomTelemetryDimensions&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">end&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">end&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="objects-emitting-telemetry-signals">Objects emitting telemetry signals&lt;/h2>
&lt;p>Telemetry data includes information about the object that emitted the telemetry signal. It&amp;rsquo;s recommended to call Session.LogMessage() &lt;strong>from within the object&lt;/strong> that causes a situation that you want to have telemetry for. That will make it easier to analyze where exactly in the code an issue occurred.&lt;/p>
&lt;p>Of course it is possible to have a single object as a central place to emit telemetry signals. The telemetry data includes a callstack, so eventually it would be possible to trace back to the exact place where an issue occurred. But that requires a more complicated query, so it would be better to emit telemetry signals right from place in the code where an issue occurred.&lt;/p>
&lt;h2 id="candidate-data-for-telemetry">Candidate data for telemetry&lt;/h2>
&lt;p>Telemetry must be &lt;strong>actionable&lt;/strong> for the customer. Do not emit signals that they cannot act on (knowing about CPU performance counters on the database is useless if the partner cannot scale the database).&lt;/p>
&lt;p>Also, note that customers pay for data ingestion. So be mindful to not flood their telemetry resources. Consider to use TelemetryScope::ExtensionPublisher by default and only use TelemetryScope::All in case the customer can also act on the data.&lt;/p>
&lt;p>If you do not know where to start, consider using telemetry for deflection. In Dynamics 365 Business Central, they started with signal about authorization (successful/failed) to deflect support cases that was due to disabled users/wrong licenses.&lt;/p>
&lt;h2 id="how-customers-use-telemetry">How customers use telemetry&lt;/h2>
&lt;p>The following are known scenarios for customer telemetry&lt;/p>
&lt;ul>
&lt;li>The tenant admin (typically an IT-pro) wants to troubleshoot a performance problem and they need more details than what is provided in the analytics reports in the admin center.&lt;/li>
&lt;li>The customer wants to analyze (and correct) errors happening in the environment (typically an IT-pro)&lt;/li>
&lt;li>The customer wants to analyze usage of features (typically an analytics user, maybe with BI experience)&lt;/li>
&lt;/ul>
&lt;p>Customers typically start in the Application Insights portal and then move on to use more advanced tools for analytics (KQL, Power BI, Excel, &amp;hellip;). Once they have seen the light, they will likely start alerting on telemetry using Azure Monitor Alerts or setting up Power Automate flows.&lt;/p>
&lt;p>Business Central have developed a telemetry maturity model (based on the Gartner BI maturity model) for how organizations can evolve to use telemetry proactively in their business processes.&lt;/p>
&lt;h2 id="privacy">Privacy&lt;/h2>
&lt;p>Telemetry must be &lt;strong>privacy compliant&lt;/strong>.&lt;/p>
&lt;p>For privacy reasons, events that have a DataClassification other than SystemMetadata aren&amp;rsquo;t sent to Application Insight resources set up on the tenant. During development of your extension, it&amp;rsquo;s good practice to have a privacy review of the use of LOGMESSAGE calls to ensure that customer data isn&amp;rsquo;t mistakenly leaked into Application Insights resources.&lt;/p></description></item></channel></rss>